<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAA/wFfbOk7YWzpdGFr6oNhbelnY2vmH1jX7yBX0vBnWNTvg1jT8HRW1O47AP//AQAA
        AAAAAAAAAAAAAGZm7g9ga+mYYGzpzGBs6cxgbOnMYGzpzF2a6t9Yye7fWNPvzFjT78xY0+/MWNPvzFjT
        8Jdb2+0OAAAAAAAA/wFha+iZYGzpzGBs6cxgbOnMYGzpzFyT6t1Ywu31WMLt9VjL7t1Y0+/MWNPvzFjT
        78xY0+/MWNPwlwD//wFiauo8YGzpzGBs6cxgbOnMYGzpzGBv6c1ave3yWMLt9VjC7fVZw+7yV9LvzVjT
        78xY0+/MWNPvzFjT78xW1O47X2zndmBs6cxgbOnMYGzpzGBs6cxegurWWMLt9VjC7fVYwu31WMLt9VjO
        7tZY0+/MWNPvzFjT78xY0+/MWNPwdGBs6YJgbOnMYGzpzGBs6cxgbOnMXYrr2FnC7PZawuz3WsLs91rD
        7fVZze7YWNPvzFjT78xY0+/MWNPvzFjU74JgbOloYGzpzGBs6cxgbOnMYmznzmqB2+ldwej9XcLo/V3C
        6P1dwej9Zcze6VnS7s5Y0+/MWNPvzFjT78xY1fBmXWzoIWBr6MpgbOnMYWznzXF00ux1ds31YbLj/F3C
        6P1dwuj9YcPl+23M0vVqzdfsWNPuzVjT78xX0+/KWNfvIAAAAABibOlmYGzpzGtx2eB1ds31dXbN9W+E
        0/devej9XsLn/WvK1/ZtzNL1bczS9WPQ4N9Y0+/MWNLuZgAAAAAAAAAAAAAAAF9r51Z4d8rqdXbN9XV2
        zfV1ds31fYu/8HnBxPBtzNL1bczS9W3M0vVwys/pV9LtVQAAAAAAAAAAAAAAAAAAAAAAAAAA2qRIx8CZ
        aNa4lXPZyZxf092mQszdpkLMxq5h07azdNm/r2rW2qhIxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN2m
        QrrdpkLM3aZCzN2mQszdpkLM3aZCzN2mQszdpkLM3aZCzN6mQ7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADdpUKA3aZCzN2mQszdpkLM3aZCzN2mQszdpkLM3aZCzN2mQszdp0J/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3Kc+Hd2mQsLdpkLM3aZCzN2mQszdpkLM3aZCzN2mQszdpkLB26RAHAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADbo0Iy3qdCut2mQszdpkLM3aZCzN2mQszep0K626NCMgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOiiRgvepUJV3adCf92nQn/epUJV6KJGCwAAAAAAAAAAAAAAAAAA
        AAAAAAAAwAMAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAwAMAAOAHAADgBwAA4AcAAOAH
        AADwDwAA+B8AAA==
</value>
  </data>
</root>